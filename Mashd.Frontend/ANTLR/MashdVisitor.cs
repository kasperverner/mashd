//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Mashd.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="MashdParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IMashdVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="MashdParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] MashdParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ImportDeclaration</c>
	/// labeled alternative in <see cref="MashdParser.importStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportDeclaration([NotNull] MashdParser.ImportDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FunctionDefinition</c>
	/// labeled alternative in <see cref="MashdParser.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDefinition([NotNull] MashdParser.FunctionDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ParameterList</c>
	/// labeled alternative in <see cref="MashdParser.formalParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameterList([NotNull] MashdParser.ParameterListContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IfStatement</c>
	/// labeled alternative in <see cref="MashdParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] MashdParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VariableDeclaration</c>
	/// labeled alternative in <see cref="MashdParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclaration([NotNull] MashdParser.VariableDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Assignment</c>
	/// labeled alternative in <see cref="MashdParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] MashdParser.AssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExpressionStatement</c>
	/// labeled alternative in <see cref="MashdParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionStatement([NotNull] MashdParser.ExpressionStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ReturnStatement</c>
	/// labeled alternative in <see cref="MashdParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] MashdParser.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IfDefinition</c>
	/// labeled alternative in <see cref="MashdParser.if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfDefinition([NotNull] MashdParser.IfDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BlockDefinition</c>
	/// labeled alternative in <see cref="MashdParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockDefinition([NotNull] MashdParser.BlockDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AdditiveExpression</c>
	/// labeled alternative in <see cref="MashdParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveExpression([NotNull] MashdParser.AdditiveExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TernaryExpression</c>
	/// labeled alternative in <see cref="MashdParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTernaryExpression([NotNull] MashdParser.TernaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TypeLitteralExpression</c>
	/// labeled alternative in <see cref="MashdParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeLitteralExpression([NotNull] MashdParser.TypeLitteralExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LiteralExpression</c>
	/// labeled alternative in <see cref="MashdParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralExpression([NotNull] MashdParser.LiteralExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NotExpression</c>
	/// labeled alternative in <see cref="MashdParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotExpression([NotNull] MashdParser.NotExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FunctionCallExpression</c>
	/// labeled alternative in <see cref="MashdParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCallExpression([NotNull] MashdParser.FunctionCallExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IdentifierExpression</c>
	/// labeled alternative in <see cref="MashdParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierExpression([NotNull] MashdParser.IdentifierExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ComparisonExpression</c>
	/// labeled alternative in <see cref="MashdParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparisonExpression([NotNull] MashdParser.ComparisonExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LogicalExpression</c>
	/// labeled alternative in <see cref="MashdParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalExpression([NotNull] MashdParser.LogicalExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DatasetCombineExpression</c>
	/// labeled alternative in <see cref="MashdParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDatasetCombineExpression([NotNull] MashdParser.DatasetCombineExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MethodCallExpression</c>
	/// labeled alternative in <see cref="MashdParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodCallExpression([NotNull] MashdParser.MethodCallExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ParenExpression</c>
	/// labeled alternative in <see cref="MashdParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenExpression([NotNull] MashdParser.ParenExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PropertyAccessExpression</c>
	/// labeled alternative in <see cref="MashdParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertyAccessExpression([NotNull] MashdParser.PropertyAccessExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NullishCoalescingExpression</c>
	/// labeled alternative in <see cref="MashdParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullishCoalescingExpression([NotNull] MashdParser.NullishCoalescingExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NegationExpression</c>
	/// labeled alternative in <see cref="MashdParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNegationExpression([NotNull] MashdParser.NegationExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ObjectExpression</c>
	/// labeled alternative in <see cref="MashdParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObjectExpression([NotNull] MashdParser.ObjectExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MultiplicativeExpression</c>
	/// labeled alternative in <see cref="MashdParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicativeExpression([NotNull] MashdParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BooleanLiteral</c>
	/// labeled alternative in <see cref="MashdParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanLiteral([NotNull] MashdParser.BooleanLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IntegerLiteral</c>
	/// labeled alternative in <see cref="MashdParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntegerLiteral([NotNull] MashdParser.IntegerLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DateLiteral</c>
	/// labeled alternative in <see cref="MashdParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateLiteral([NotNull] MashdParser.DateLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DecimalLiteral</c>
	/// labeled alternative in <see cref="MashdParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecimalLiteral([NotNull] MashdParser.DecimalLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TextLiteral</c>
	/// labeled alternative in <see cref="MashdParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTextLiteral([NotNull] MashdParser.TextLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NullLiteral</c>
	/// labeled alternative in <see cref="MashdParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullLiteral([NotNull] MashdParser.NullLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MashdParser.keyValuePair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKeyValuePair([NotNull] MashdParser.KeyValuePairContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MashdParser.actualParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitActualParameters([NotNull] MashdParser.ActualParametersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MashdParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCall([NotNull] MashdParser.FunctionCallContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MashdParser.methodChain"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodChain([NotNull] MashdParser.MethodChainContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MashdParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] MashdParser.TypeContext context);
}
