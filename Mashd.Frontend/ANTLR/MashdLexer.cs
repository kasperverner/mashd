//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Mashd.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class MashdLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, T__49=50, T__50=51, T__51=52, 
		T__52=53, INTEGER=54, DECIMAL=55, TEXT=56, BOOLEAN=57, NULL=58, ID=59, 
		DATE=60, WS=61, COMMENT=62, MULTILINE_COMMENT=63;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
		"T__49", "T__50", "T__51", "T__52", "INTEGER", "DECIMAL", "TEXT", "BOOLEAN", 
		"NULL", "ID", "DATE", "WS", "COMMENT", "MULTILINE_COMMENT", "ISO8601Date", 
		"YEAR", "MONTH", "DAY", "HOUR", "MINUTE", "SECOND", "MILLISECOND", "TZ"
	};


	public MashdLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public MashdLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'import'", "';'", "'('", "')'", "'='", "'&'", "','", "'+='", "'-='", 
		"'*='", "'/='", "'??='", "'return'", "'if'", "'else'", "'{'", "'}'", "'.'", 
		"'++'", "'--'", "'-'", "'!'", "'*'", "'/'", "'%'", "'+'", "'<'", "'<='", 
		"'>'", "'>='", "'=='", "'!='", "'??'", "'&&'", "'||'", "'?'", "':'", "'type'", 
		"'name'", "'adapter'", "'source'", "'schema'", "'delimiter'", "'query'", 
		"'skip'", "'Boolean'", "'Integer'", "'Date'", "'Decimal'", "'Text'", "'Schema'", 
		"'Dataset'", "'Mashd'", null, null, null, null, "'null'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, "INTEGER", "DECIMAL", "TEXT", "BOOLEAN", 
		"NULL", "ID", "DATE", "WS", "COMMENT", "MULTILINE_COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Mashd.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static MashdLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,63,568,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,
		1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,10,
		1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,
		1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,18,
		1,19,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,
		1,25,1,26,1,26,1,27,1,27,1,27,1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,30,
		1,31,1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,33,1,34,1,34,1,34,1,35,1,35,
		1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,39,1,39,
		1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,41,
		1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,
		1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,45,
		1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,46,
		1,46,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,
		1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,
		1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,53,4,53,
		358,8,53,11,53,12,53,359,1,54,4,54,363,8,54,11,54,12,54,364,1,54,1,54,
		4,54,369,8,54,11,54,12,54,370,1,55,1,55,1,55,1,55,5,55,377,8,55,10,55,
		12,55,380,9,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,
		3,56,393,8,56,1,57,1,57,1,57,1,57,1,57,1,58,1,58,5,58,402,8,58,10,58,12,
		58,405,9,58,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,3,59,415,8,59,1,60,
		4,60,418,8,60,11,60,12,60,419,1,60,1,60,1,61,1,61,1,61,1,61,5,61,428,8,
		61,10,61,12,61,431,9,61,1,61,1,61,1,62,1,62,1,62,1,62,5,62,439,8,62,10,
		62,12,62,442,9,62,1,62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,63,1,63,1,
		63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,
		63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,
		63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,
		63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,
		63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,
		63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,3,63,537,
		8,63,1,64,1,64,1,64,1,64,1,64,1,65,1,65,1,65,1,66,1,66,1,66,1,67,1,67,
		1,67,1,68,1,68,1,68,1,69,1,69,1,69,1,70,4,70,560,8,70,11,70,12,70,561,
		1,71,1,71,1,71,1,71,1,71,1,440,0,72,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
		17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,
		41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,
		65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,
		89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,
		111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,0,129,0,131,
		0,133,0,135,0,137,0,139,0,141,0,143,0,1,0,11,1,0,48,57,4,0,10,10,13,13,
		34,34,92,92,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,3,0,9,
		10,13,13,32,32,2,0,10,10,13,13,1,0,48,49,1,0,48,51,1,0,48,50,1,0,48,53,
		2,0,43,43,45,45,576,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,
		9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,
		0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,
		31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,
		0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,
		0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,
		1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,
		0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,
		1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,
		0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,
		0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,
		0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,
		1,145,1,0,0,0,3,152,1,0,0,0,5,154,1,0,0,0,7,156,1,0,0,0,9,158,1,0,0,0,
		11,160,1,0,0,0,13,162,1,0,0,0,15,164,1,0,0,0,17,167,1,0,0,0,19,170,1,0,
		0,0,21,173,1,0,0,0,23,176,1,0,0,0,25,180,1,0,0,0,27,187,1,0,0,0,29,190,
		1,0,0,0,31,195,1,0,0,0,33,197,1,0,0,0,35,199,1,0,0,0,37,201,1,0,0,0,39,
		204,1,0,0,0,41,207,1,0,0,0,43,209,1,0,0,0,45,211,1,0,0,0,47,213,1,0,0,
		0,49,215,1,0,0,0,51,217,1,0,0,0,53,219,1,0,0,0,55,221,1,0,0,0,57,224,1,
		0,0,0,59,226,1,0,0,0,61,229,1,0,0,0,63,232,1,0,0,0,65,235,1,0,0,0,67,238,
		1,0,0,0,69,241,1,0,0,0,71,244,1,0,0,0,73,246,1,0,0,0,75,248,1,0,0,0,77,
		253,1,0,0,0,79,258,1,0,0,0,81,266,1,0,0,0,83,273,1,0,0,0,85,280,1,0,0,
		0,87,290,1,0,0,0,89,296,1,0,0,0,91,301,1,0,0,0,93,309,1,0,0,0,95,317,1,
		0,0,0,97,322,1,0,0,0,99,330,1,0,0,0,101,335,1,0,0,0,103,342,1,0,0,0,105,
		350,1,0,0,0,107,357,1,0,0,0,109,362,1,0,0,0,111,372,1,0,0,0,113,392,1,
		0,0,0,115,394,1,0,0,0,117,399,1,0,0,0,119,414,1,0,0,0,121,417,1,0,0,0,
		123,423,1,0,0,0,125,434,1,0,0,0,127,536,1,0,0,0,129,538,1,0,0,0,131,543,
		1,0,0,0,133,546,1,0,0,0,135,549,1,0,0,0,137,552,1,0,0,0,139,555,1,0,0,
		0,141,559,1,0,0,0,143,563,1,0,0,0,145,146,5,105,0,0,146,147,5,109,0,0,
		147,148,5,112,0,0,148,149,5,111,0,0,149,150,5,114,0,0,150,151,5,116,0,
		0,151,2,1,0,0,0,152,153,5,59,0,0,153,4,1,0,0,0,154,155,5,40,0,0,155,6,
		1,0,0,0,156,157,5,41,0,0,157,8,1,0,0,0,158,159,5,61,0,0,159,10,1,0,0,0,
		160,161,5,38,0,0,161,12,1,0,0,0,162,163,5,44,0,0,163,14,1,0,0,0,164,165,
		5,43,0,0,165,166,5,61,0,0,166,16,1,0,0,0,167,168,5,45,0,0,168,169,5,61,
		0,0,169,18,1,0,0,0,170,171,5,42,0,0,171,172,5,61,0,0,172,20,1,0,0,0,173,
		174,5,47,0,0,174,175,5,61,0,0,175,22,1,0,0,0,176,177,5,63,0,0,177,178,
		5,63,0,0,178,179,5,61,0,0,179,24,1,0,0,0,180,181,5,114,0,0,181,182,5,101,
		0,0,182,183,5,116,0,0,183,184,5,117,0,0,184,185,5,114,0,0,185,186,5,110,
		0,0,186,26,1,0,0,0,187,188,5,105,0,0,188,189,5,102,0,0,189,28,1,0,0,0,
		190,191,5,101,0,0,191,192,5,108,0,0,192,193,5,115,0,0,193,194,5,101,0,
		0,194,30,1,0,0,0,195,196,5,123,0,0,196,32,1,0,0,0,197,198,5,125,0,0,198,
		34,1,0,0,0,199,200,5,46,0,0,200,36,1,0,0,0,201,202,5,43,0,0,202,203,5,
		43,0,0,203,38,1,0,0,0,204,205,5,45,0,0,205,206,5,45,0,0,206,40,1,0,0,0,
		207,208,5,45,0,0,208,42,1,0,0,0,209,210,5,33,0,0,210,44,1,0,0,0,211,212,
		5,42,0,0,212,46,1,0,0,0,213,214,5,47,0,0,214,48,1,0,0,0,215,216,5,37,0,
		0,216,50,1,0,0,0,217,218,5,43,0,0,218,52,1,0,0,0,219,220,5,60,0,0,220,
		54,1,0,0,0,221,222,5,60,0,0,222,223,5,61,0,0,223,56,1,0,0,0,224,225,5,
		62,0,0,225,58,1,0,0,0,226,227,5,62,0,0,227,228,5,61,0,0,228,60,1,0,0,0,
		229,230,5,61,0,0,230,231,5,61,0,0,231,62,1,0,0,0,232,233,5,33,0,0,233,
		234,5,61,0,0,234,64,1,0,0,0,235,236,5,63,0,0,236,237,5,63,0,0,237,66,1,
		0,0,0,238,239,5,38,0,0,239,240,5,38,0,0,240,68,1,0,0,0,241,242,5,124,0,
		0,242,243,5,124,0,0,243,70,1,0,0,0,244,245,5,63,0,0,245,72,1,0,0,0,246,
		247,5,58,0,0,247,74,1,0,0,0,248,249,5,116,0,0,249,250,5,121,0,0,250,251,
		5,112,0,0,251,252,5,101,0,0,252,76,1,0,0,0,253,254,5,110,0,0,254,255,5,
		97,0,0,255,256,5,109,0,0,256,257,5,101,0,0,257,78,1,0,0,0,258,259,5,97,
		0,0,259,260,5,100,0,0,260,261,5,97,0,0,261,262,5,112,0,0,262,263,5,116,
		0,0,263,264,5,101,0,0,264,265,5,114,0,0,265,80,1,0,0,0,266,267,5,115,0,
		0,267,268,5,111,0,0,268,269,5,117,0,0,269,270,5,114,0,0,270,271,5,99,0,
		0,271,272,5,101,0,0,272,82,1,0,0,0,273,274,5,115,0,0,274,275,5,99,0,0,
		275,276,5,104,0,0,276,277,5,101,0,0,277,278,5,109,0,0,278,279,5,97,0,0,
		279,84,1,0,0,0,280,281,5,100,0,0,281,282,5,101,0,0,282,283,5,108,0,0,283,
		284,5,105,0,0,284,285,5,109,0,0,285,286,5,105,0,0,286,287,5,116,0,0,287,
		288,5,101,0,0,288,289,5,114,0,0,289,86,1,0,0,0,290,291,5,113,0,0,291,292,
		5,117,0,0,292,293,5,101,0,0,293,294,5,114,0,0,294,295,5,121,0,0,295,88,
		1,0,0,0,296,297,5,115,0,0,297,298,5,107,0,0,298,299,5,105,0,0,299,300,
		5,112,0,0,300,90,1,0,0,0,301,302,5,66,0,0,302,303,5,111,0,0,303,304,5,
		111,0,0,304,305,5,108,0,0,305,306,5,101,0,0,306,307,5,97,0,0,307,308,5,
		110,0,0,308,92,1,0,0,0,309,310,5,73,0,0,310,311,5,110,0,0,311,312,5,116,
		0,0,312,313,5,101,0,0,313,314,5,103,0,0,314,315,5,101,0,0,315,316,5,114,
		0,0,316,94,1,0,0,0,317,318,5,68,0,0,318,319,5,97,0,0,319,320,5,116,0,0,
		320,321,5,101,0,0,321,96,1,0,0,0,322,323,5,68,0,0,323,324,5,101,0,0,324,
		325,5,99,0,0,325,326,5,105,0,0,326,327,5,109,0,0,327,328,5,97,0,0,328,
		329,5,108,0,0,329,98,1,0,0,0,330,331,5,84,0,0,331,332,5,101,0,0,332,333,
		5,120,0,0,333,334,5,116,0,0,334,100,1,0,0,0,335,336,5,83,0,0,336,337,5,
		99,0,0,337,338,5,104,0,0,338,339,5,101,0,0,339,340,5,109,0,0,340,341,5,
		97,0,0,341,102,1,0,0,0,342,343,5,68,0,0,343,344,5,97,0,0,344,345,5,116,
		0,0,345,346,5,97,0,0,346,347,5,115,0,0,347,348,5,101,0,0,348,349,5,116,
		0,0,349,104,1,0,0,0,350,351,5,77,0,0,351,352,5,97,0,0,352,353,5,115,0,
		0,353,354,5,104,0,0,354,355,5,100,0,0,355,106,1,0,0,0,356,358,7,0,0,0,
		357,356,1,0,0,0,358,359,1,0,0,0,359,357,1,0,0,0,359,360,1,0,0,0,360,108,
		1,0,0,0,361,363,7,0,0,0,362,361,1,0,0,0,363,364,1,0,0,0,364,362,1,0,0,
		0,364,365,1,0,0,0,365,366,1,0,0,0,366,368,5,46,0,0,367,369,7,0,0,0,368,
		367,1,0,0,0,369,370,1,0,0,0,370,368,1,0,0,0,370,371,1,0,0,0,371,110,1,
		0,0,0,372,378,5,34,0,0,373,377,8,1,0,0,374,375,5,92,0,0,375,377,9,0,0,
		0,376,373,1,0,0,0,376,374,1,0,0,0,377,380,1,0,0,0,378,376,1,0,0,0,378,
		379,1,0,0,0,379,381,1,0,0,0,380,378,1,0,0,0,381,382,5,34,0,0,382,112,1,
		0,0,0,383,384,5,116,0,0,384,385,5,114,0,0,385,386,5,117,0,0,386,393,5,
		101,0,0,387,388,5,102,0,0,388,389,5,97,0,0,389,390,5,108,0,0,390,391,5,
		115,0,0,391,393,5,101,0,0,392,383,1,0,0,0,392,387,1,0,0,0,393,114,1,0,
		0,0,394,395,5,110,0,0,395,396,5,117,0,0,396,397,5,108,0,0,397,398,5,108,
		0,0,398,116,1,0,0,0,399,403,7,2,0,0,400,402,7,3,0,0,401,400,1,0,0,0,402,
		405,1,0,0,0,403,401,1,0,0,0,403,404,1,0,0,0,404,118,1,0,0,0,405,403,1,
		0,0,0,406,407,5,39,0,0,407,408,3,127,63,0,408,409,5,39,0,0,409,415,1,0,
		0,0,410,411,5,34,0,0,411,412,3,127,63,0,412,413,5,34,0,0,413,415,1,0,0,
		0,414,406,1,0,0,0,414,410,1,0,0,0,415,120,1,0,0,0,416,418,7,4,0,0,417,
		416,1,0,0,0,418,419,1,0,0,0,419,417,1,0,0,0,419,420,1,0,0,0,420,421,1,
		0,0,0,421,422,6,60,0,0,422,122,1,0,0,0,423,424,5,47,0,0,424,425,5,47,0,
		0,425,429,1,0,0,0,426,428,8,5,0,0,427,426,1,0,0,0,428,431,1,0,0,0,429,
		427,1,0,0,0,429,430,1,0,0,0,430,432,1,0,0,0,431,429,1,0,0,0,432,433,6,
		61,0,0,433,124,1,0,0,0,434,435,5,47,0,0,435,436,5,42,0,0,436,440,1,0,0,
		0,437,439,9,0,0,0,438,437,1,0,0,0,439,442,1,0,0,0,440,441,1,0,0,0,440,
		438,1,0,0,0,441,443,1,0,0,0,442,440,1,0,0,0,443,444,5,42,0,0,444,445,5,
		47,0,0,445,446,1,0,0,0,446,447,6,62,0,0,447,126,1,0,0,0,448,449,3,129,
		64,0,449,450,5,45,0,0,450,451,3,131,65,0,451,452,5,45,0,0,452,453,3,133,
		66,0,453,537,1,0,0,0,454,455,3,129,64,0,455,456,5,45,0,0,456,457,3,131,
		65,0,457,458,5,45,0,0,458,459,3,133,66,0,459,460,5,84,0,0,460,461,3,135,
		67,0,461,462,5,58,0,0,462,463,3,137,68,0,463,464,5,58,0,0,464,465,3,139,
		69,0,465,537,1,0,0,0,466,467,3,129,64,0,467,468,5,45,0,0,468,469,3,131,
		65,0,469,470,5,45,0,0,470,471,3,133,66,0,471,472,5,84,0,0,472,473,3,135,
		67,0,473,474,5,58,0,0,474,475,3,137,68,0,475,476,5,58,0,0,476,477,3,139,
		69,0,477,478,5,46,0,0,478,479,3,141,70,0,479,537,1,0,0,0,480,481,3,129,
		64,0,481,482,5,45,0,0,482,483,3,131,65,0,483,484,5,45,0,0,484,485,3,133,
		66,0,485,486,5,84,0,0,486,487,3,135,67,0,487,488,5,58,0,0,488,489,3,137,
		68,0,489,490,5,58,0,0,490,491,3,139,69,0,491,492,5,90,0,0,492,537,1,0,
		0,0,493,494,3,129,64,0,494,495,5,45,0,0,495,496,3,131,65,0,496,497,5,45,
		0,0,497,498,3,133,66,0,498,499,5,84,0,0,499,500,3,135,67,0,500,501,5,58,
		0,0,501,502,3,137,68,0,502,503,5,58,0,0,503,504,3,139,69,0,504,505,5,46,
		0,0,505,506,3,141,70,0,506,507,5,90,0,0,507,537,1,0,0,0,508,509,3,129,
		64,0,509,510,5,45,0,0,510,511,3,131,65,0,511,512,5,45,0,0,512,513,3,133,
		66,0,513,514,5,84,0,0,514,515,3,135,67,0,515,516,5,58,0,0,516,517,3,137,
		68,0,517,518,5,58,0,0,518,519,3,139,69,0,519,520,3,143,71,0,520,537,1,
		0,0,0,521,522,3,129,64,0,522,523,5,45,0,0,523,524,3,131,65,0,524,525,5,
		45,0,0,525,526,3,133,66,0,526,527,5,84,0,0,527,528,3,135,67,0,528,529,
		5,58,0,0,529,530,3,137,68,0,530,531,5,58,0,0,531,532,3,139,69,0,532,533,
		5,46,0,0,533,534,3,141,70,0,534,535,3,143,71,0,535,537,1,0,0,0,536,448,
		1,0,0,0,536,454,1,0,0,0,536,466,1,0,0,0,536,480,1,0,0,0,536,493,1,0,0,
		0,536,508,1,0,0,0,536,521,1,0,0,0,537,128,1,0,0,0,538,539,7,0,0,0,539,
		540,7,0,0,0,540,541,7,0,0,0,541,542,7,0,0,0,542,130,1,0,0,0,543,544,7,
		6,0,0,544,545,7,0,0,0,545,132,1,0,0,0,546,547,7,7,0,0,547,548,7,0,0,0,
		548,134,1,0,0,0,549,550,7,8,0,0,550,551,7,0,0,0,551,136,1,0,0,0,552,553,
		7,9,0,0,553,554,7,0,0,0,554,138,1,0,0,0,555,556,7,9,0,0,556,557,7,0,0,
		0,557,140,1,0,0,0,558,560,7,0,0,0,559,558,1,0,0,0,560,561,1,0,0,0,561,
		559,1,0,0,0,561,562,1,0,0,0,562,142,1,0,0,0,563,564,7,10,0,0,564,565,3,
		135,67,0,565,566,5,58,0,0,566,567,3,137,68,0,567,144,1,0,0,0,14,0,359,
		364,370,376,378,392,403,414,419,429,440,536,561,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
